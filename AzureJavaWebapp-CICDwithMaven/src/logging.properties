# The set of handlers to be loaded upon startup.

# Comma-separated list of class names.

handlers=java.util.logging.ConsoleHandler

 

# Default global logging level.

# Loggers and Handlers may override this level

.level=ALL

 

# Loggers

# \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014

# Loggers are usually attached to packages.

# Here, the level for each package is specified.

# The global level is used by default, so levels

# specified here simply act as an override.

# myapp.ui.level=ALL

 

# Handlers

# \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2013

# \u2014 ConsoleHandler \u2014

# Override of global logging level

java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

 

# \u2014 FileHandler \u2014

# Override of global logging level

java.util.logging.ConsoleHandler.level=ALL

 

# Naming style for the output file:

# (The output file is placed in the directory

# defined by the \u201Cuser.home\u201D System property.)

#java.util.logging.FileHandler.pattern=%h/java%u.log

 

# Limiting size of output file in bytes:

#java.util.logging.FileHandler.limit=50000

 

# Number of output files to cycle through, by appending an

# integer to the base file name:

#java.util.logging.FileHandler.count=5

 

# Style of output (Simple or XML):

#java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
